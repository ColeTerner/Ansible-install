---
- hosts: all
#  connection: local
#  gather_facts: no
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:

  - name: Transfer the py
    copy: src=unlift-plugin.py dest=/home/{{ansible_user}} mode=0777

  - name: Transfer the py
    copy: src=sources.list dest=/home/{{ansible_user}} mode=0777

  - name: prescript
    shell: echo 'Acquire::http::Proxy "http://face452k.bit-tech.co:8105";'|sudo tee /etc/apt/apt.conf.d/00aptproxy;sudo cp /home/{{ansible_user}}/sources.list /etc/apt/;sudo cp /home/{{ansible_user}}/unlift-plugin.py /etc/unlift_plugins/;sudo chmod 755 /etc/unlift_plugins/unlift-plugin.py;sudo cp /home/{{ansible_user}}/sources.list /etc/apt/;sudo sed -i 's/xenial/bionic/g' /etc/apt/sources.list
    become: yes

  - name: Run the equivalent of "apt-get update" as a separate step
    apt:
      update_cache: yes
    become: yes
    ignore_errors: True

  - name: install basic packages
    apt:
      name: "{{ item }}"
      state: present
    loop:
      - findface-counter
      - postgresql-10
      - redis-server
      - pgbouncer
    become: yes

  - name: echo '"ntech" "9T3g1nXy9yx3y8MIGm9fbef3dia8UTc3"' | sudo tee -a /etc/pgbouncer/userlist.txt
    shell: echo '"ntech" "9T3g1nXy9yx3y8MIGm9fbef3dia8UTc3"' | sudo tee -a /etc/pgbouncer/userlist.txt
    become: yes
    ignore_errors: True

  - name: sudo sed -i 's/\[databases\]/\[databases\]\nffsecurity = dbname=ffsecurity host=localhost port=5432 user=ntech\nauth_type = plain\npool_mode = transaction\nmax_client_conn = 16384\nsyslog = 1\nlisten_port = 5439\n/' /etc/pgbouncer/pgbouncer.ini
    shell: sed -i 's/\[databases\]/\[databases\]\nffsecurity = dbname=ffsecurity host=localhost port=5432 user=ntech\nauth_type = plain\npool_mode = transaction\nmax_client_conn = 16384\nsyslog = 1\nlisten_port = 5439\n/' /etc/pgbouncer/pgbouncer.ini
    become: yes
    ignore_errors: True

  - name: sudo sed -i 's/\[databases\]/\[databases\]\nffsecurity = dbname=ffsecurity host=localhost port=5432 user=ntech\nauth_type = plain\npool_mode = transaction\nmax_client_conn = 16384\nsyslog = 1\nlisten_port = 5439\n/' /etc/pgbouncer/pgbouncer.ini
    shell: sed -i 's/\[databases\]/\[databases\]\nffsecurity = dbname=ffsecurity host=localhost port=5432 user=ntech\nauth_type = plain\npool_mode = transaction\nmax_client_conn = 16384\nsyslog = 1\nlisten_port = 5439\n/' /etc/pgbouncer/pgbouncer.ini
    become: yes
    ignore_errors: True

  - name: Enable and start service 1
    systemd:
      name: "{{ item }}"
      enabled: yes
      masked: no
      state: started
    loop:
      - postgresql@10-main.service
      - redis-server.service
      - etcd.service
      - memcached.service
      - pgbouncer.service
    become: yes

  - name: CREATE ROLE ntech WITH LOGIN PASSWORD 
    shell: echo "CREATE ROLE ntech WITH LOGIN PASSWORD '9T3g1nXy9yx3y8MIGm9fbef3dia8UTc3';CREATE DATABASE ffsecurity WITH OWNER ntech ENCODING 'UTF-8' LC_COLLATE='en_US.UTF-8' LC_CTYPE='en_US.UTF-8' TEMPLATE template0;CREATE DATABASE ffcounter WITH OWNER ntech ENCODING 'UTF-8' LC_COLLATE='C.UTF-8' LC_CTYPE='C.UTF-8' TEMPLATE template0;"|sudo -u postgres psql
    become: yes
    ignore_errors: True

  - name: echo 'local all ntech peer' | sudo tee -a /etc/postgresql/10/main/pg_hba.conf
    shell: echo 'local all ntech peer' | sudo tee -a /etc/postgresql/10/main/pg_hba.conf
    become: yes
    ignore_errors: True

  - name: Enable and restart service 2
    systemd:
      name: "{{ item }}"
      enabled: yes
      masked: no
      state: restarted
    loop:
      - postgresql@10-main.service
      - findface-counter.service
      - unlift.service
    become: yes


  - name: check postgresql@10-main.service
    shell:  systemctl status postgresql@10-main.service
    register: postgresql

  - debug:  var=postgresql.stdout_lines

  - name: check findface-counter.service
    shell:  systemctl status findface-counter.service
    register: counter

  - debug:  var=counter.stdout_lines
