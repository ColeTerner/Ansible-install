---
- name: NGINX installation
  hosts:  all
  gather_facts: false
  tasks:

    - name: remove apache2
      apt:
        name: apache2
        state:  absent
      become: yes

    - name: apt update
      shell:  apt update
      become: yes

    - name: install NGINX
      apt:
        name: nginx
        state:  latest
      become: yes

    - name: nginx version
      shell:  nginx -v
      register: nginx_version
    - debug:  var=nginx_version.stdout

    - name: check if it works
      shell:  curl -4 http://localhost | grep nginx
      register: it_works
    - debug:  var=it_works.stdout_lines




- name: NGINX configuration
  hosts:  all
  vars:
    domain: zayl.com
    index_html: /mnt/distr/ansible/index.html
  tasks:

    - name: create domain directory
      file:
        path: /var/www/{{domain}}/html
        state:  directory
        mode: '0755'
        owner:  '{{ ansible_user }}'
        group:  '{{ ansible_user }}'
      become: yes

    - name: copy file index.html -> /var/www/<your_domain>/
      copy:
        src:  '{{index_html}}'
        dest: /var/www/{{domain}}/html/index.html
      become: yes

    - name: chmod index.html
      shell:  chmod 777 /var/www/{{domain}}/html/index.html
      become: yes
    
    - name: chown index.html
      shell:  chown {{ansible_user}}:{{ansible_user}} /var/www/{{domain}}/html/index.html
      become: yes


    - name: create config for new site
      file:
        path: /etc/nginx/sites-available/{{domain}}
        state: touch
        mode: '0755'
        owner:  '{{ ansible_user }}'
        group:  '{{ ansible_user }}'
      become: yes

    - name: fill the config file
      blockinfile:
        path: /etc/nginx/sites-available/{{domain}}
        block:  |
          server {
            listen 80;
            listen [::]:80;

            root /var/www/zayl.com/html;
            index index.html index.htm index.nginx-debian.html;

            server_name {{domain}} www.{{domain}};

            location / {
                    try_files $uri $uri/ =404;
            }
          }
      become: yes

    - name: create symbolic link to sites-enabled
      file:
        src:  /etc/nginx/sites-available/{{domain}}
        dest: /etc/nginx/sites-enabled/{{domain}}
        owner:  '{{ansible_user}}'
        group:  '{{ansible_user}}'
        state:  link
      become: yes

    - name: replace string hash in /etc/nginx/nginx.conf
      replace:
        path: /etc/nginx/nginx.conf
        regexp: '# server_names_hash_bucket_size.*'
        replace:  'server_names_hash_bucket_size 64;'
      become: yes

    - name: test nginx config for mistakes
      shell:  sudo nginx -t
      register: test
      become: yes
    - debug:  var=test.stdout_lines

    - name: restart nginx
      systemd:
        name: nginx
        state:  restarted
      become: yes

    - name: NGINX - make your site visible from the localhost(ip www.<domain> -> /etc/hosts)
      blockinfile:
        path: /etc/hosts
        state:  present
        insertafter:  "^127.0.0.1.*"
        block:  "127.0.0.1  www.{{domain}}"
      become: yes

    - name: reboot
      reboot:
      become: yes